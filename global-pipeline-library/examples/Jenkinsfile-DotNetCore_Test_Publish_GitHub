#!/usr/bin/env groovy

@Library("com.optum.jenkins.pipeline.library@master") _

// This is an example Jenkinfile to  Test and Publish (includes build) CSharp App using .Net Core Framework.
// The Jenkins Global Pipeline Library that is being used is: https://github.optum.com/jenkins-pipelines/global-pipeline-library
// The pipeline requires 'dotnet' mixin if using Docker build agent. 
// Third party dependencies such as Nlog, Entity Framework are resolved via NuGet repository 

pipeline {
  agent {
    label 'docker-dotnet-slave'
  }
  stages {
    stage ('Run Unit Tests') {
      steps {
        glDotNetCoreTest  testProjectFile:"App.UnitTests/App.UnitTests.csproj",
                          projectFile: "App.sln"
      }
    }
    stage('Publish Application') {
      steps {
        glDotNetCorePublish outputFolder:"publishedApp",
                            projectFile: "App.sln"
      }
    }
  }
  post {
    always {
      echo 'This will always run'
      emailext body:  "Build URL: ${BUILD_URL}",
        subject: "$currentBuild.currentResult-$JOB_NAME",
        to: 'emailAddressGoesHere@optum.com'
    }
    success {
      echo 'This will run only if successful'
    }
    failure {
      echo 'This will run only if failed'
    }
    unstable {
      echo 'This will run only if the run was marked as unstable'
    }
    changed {
      echo 'This will run only if the state of the Pipeline has changed'
      echo 'For example, if the Pipeline was previously failing but is now successful'
    }
  }
}


