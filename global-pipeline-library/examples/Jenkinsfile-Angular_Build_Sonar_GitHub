#!/usr/bin/env groovy

@Library("com.optum.jenkins.pipeline.library@master") _

// This is an example Jenkinfile to Build, Test and analyze Angular App.
// The Jenkins Global Pipeline Library that is being used is: https://github.optum.com/jenkins-pipelines/global-pipeline-library
// Expectation is that Jenkins agent has nodejs and npm installed (as mixin if using Docker build agent). 
// Angular CLI, Compiler and other required packages should be defined as dependencies in package.json file.

// This example also includes call to Sonar scanner with expectation that sonar-project.properties file is 
// available in root of the project.  

pipeline {
  agent {
    label 'docker-nodejs-slave'
  }
  stages {
    stage ('Run Unit Tests & Code Coverage') {
      steps {
        glAngularTest([:])
      }
    }
    stage('Sonar Scan') {
      steps {
        glSonarScanWithPropertiesFile sonarServer:"Sonar", sonarTool:"Sonar"
      }
    }
    stage('Build Application') {
      steps {
        glAngularBuild([:])
      }
    }
  }
  post {
    always {
      echo 'This will always run'
      emailext body:  "Build URL: ${BUILD_URL}",
        subject: "$currentBuild.currentResult-$JOB_NAME",
        to: 'emailAddressGoesHere@optum.com'
    }
    success {
      echo 'This will run only if successful'
    }
    failure {
      echo 'This will run only if failed'
    }
    unstable {
      echo 'This will run only if the run was marked as unstable'
    }
    changed {
      echo 'This will run only if the state of the Pipeline has changed'
      echo 'For example, if the Pipeline was previously failing but is now successful'
    }
  }
}

