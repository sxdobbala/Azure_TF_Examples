#!/usr/bin/env groovy

@Library("com.optum.jenkins.pipeline.library@master") _



// This is an example Jenkinfile to execute a Sonar Scan using the sonarqube-scanner NPM plugin.
// The preferred method to run a Sonar scan is with Maven or Gradle. However, the scanner plugin may come in handy for
// projects that do not use one of these modern build systems.
// The Jenkins Global Pipeline Library that is being used is: https://github.optum.com/jenkins-pipelines/global-pipeline-library
// sonarqube-scanner NPM Plugin: https://www.npmjs.com/package/sonarqube-scanner
// The plugin must be installed and available in project's node_modules directory.

// Will only work with NodeJS >= v4.8.7 because of required ES6 arrow functions
// If you are using Jenkins mixin for NodeJS set NODEJS_VERSION to one of the available versions (ex. 6.9.1)
// https://codehub.optum.com/jenkins/docker_build_agents/tree/master/mixins/jenkins_mixin_nodejs

pipeline {
  agent {
    label 'docker-nodejs-slave'
  }
  environment {
    GIT_CREDENTIALS_ID = 'sonar_tech'
  }

  stages {
    stage ('Install dependencies') {
      steps {
        // Load the sonarqube-scanner plugin. This assumes it's specified in package.json
        command 'npm install --registry http://repo1.uhc.com/artifactory/api/npm/npm-remote/'
      }
    }
    stage ('Build') {
      steps {
        // Build and run tests with coverage
      }
    }
    stage('Sonar') {
      steps {
        glSonarNpmScan gitUserCredentialsId:"${env.GIT_CREDENTIALS_ID}",
          additionalProps:['sonar.sources':'src', 'sonar.javascript.lcov.reportPath':'coverage/lcov.info', 'sonar.ts.lcov.reportpath':'coverage/lcov.info']
        }
    }
  }
  post {
    always {
      echo 'This will always run'
      emailext body:  "Build URL: ${BUILD_URL}",
        subject: "$currentBuild.currentResult-$JOB_NAME",
        to: 'emailAddressGoesHere@optum.com'
    }
    success {
      echo 'This will run only if successful'
    }
    failure {
      echo 'This will run only if failed'
    }
    unstable {
      echo 'This will run only if the run was marked as unstable'
    }
    changed {
      echo 'This will run only if the state of the Pipeline has changed'
      echo 'For example, if the Pipeline was previously failing but is now successful'
    }
  }
}
