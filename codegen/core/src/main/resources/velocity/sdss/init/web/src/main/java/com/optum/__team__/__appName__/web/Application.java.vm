#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
package ${package}.web;


import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.HashSet;
import java.util.Set;

import javax.ws.rs.ApplicationPath;

import ${package}.web.controller.*;

import io.swagger.jaxrs.config.BeanConfig;
import io.swagger.jaxrs.listing.ApiListingResource;
import io.swagger.jaxrs.listing.SwaggerSerializers;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.support.SpringBootServletInitializer;

import javax.security.auth.message.config.AuthConfigFactory;
import org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl;
import org.springframework.context.annotation.ComponentScan;

@SpringBootApplication
@ApplicationPath("/api")
@ComponentScan("${package}")
public class Application extends SpringBootServletInitializer {

    /*@Override
    public Set<Class<?>> getClasses() {
        Set<Class<?>> resources = new HashSet<>();
        resources.add(ApiListingResource.class);
        resources.add(SwaggerSerializers.class);
        // add application resources here
        resources.add(HealthController.class);

        return resources;
    }*/

    @Override
    protected SpringApplicationBuilder configure(SpringApplicationBuilder application){
      return application.sources(Application.class);
    }

    public static void main (String[] args){
        if (AuthConfigFactory.getFactory() == null) {
            AuthConfigFactory.setFactory(new AuthConfigFactoryImpl());
        }
        SpringApplication.run(Application.class, args);
        System.out.println("Started $artifactId service!");
        try {
            System.out.println("Available @ http://" + InetAddress.getLocalHost().getHostAddress() + ":8080/health");
        } catch (UnknownHostException e){
            e.printStackTrace();
        }
    }

    public Application() {
        BeanConfig beanConfig = new BeanConfig();
        beanConfig.setVersion("1.0.0");
        beanConfig.setBasePath("/api");
        beanConfig.setResourcePackage("${package}.web.controller");
        beanConfig.setScan(true);
    }
}
