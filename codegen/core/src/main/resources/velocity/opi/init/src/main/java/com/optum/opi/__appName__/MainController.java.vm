package com.optum.opi.${appName};

import java.io.FileReader;
import java.io.IOException;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;

/**
 * Controller class containing routes for API business logic.
 * 
 * @author AUTHOR, AUTHOR_EMAIL
 * @version VERSION
 *
 */
@RestController
public class MainController {

    /**
     * Route used to monitor health of API. DO NOT ERASE.
     * 
     * @return HTTP status OK with message
     */
    @RequestMapping(value = "/", method = RequestMethod.GET)
    public ResponseEntity<Object> root() {
        return new ResponseEntity<>("Optum Payment Integrity API", HttpStatus.OK);
    }
    
    /**
     * Route used to monitor health of API. DO NOT ERASE.
     * 
     * @return HTTP status OK with message
     * @throws ParseException 
     */
    @RequestMapping(value = "/metadata", method = RequestMethod.GET)
    public ResponseEntity<Object> health() throws IOException, ParseException {
        JSONParser parser = new JSONParser();
        JSONObject properties = (JSONObject) parser.parse(new FileReader("properties.json"));
        
        return new ResponseEntity<>(properties, HttpStatus.OK);
    }
    
    /**
     * Example GET API request
     * 
     * @return HTTP status OK with greeting message
     */
    @RequestMapping(value = "/greeting", method = RequestMethod.GET)
    public ResponseEntity<Object> getData() {
        return new ResponseEntity<>("Hello!", HttpStatus.OK);
    }
    
    /**
     * Example POST API request
     * 
     * @return HTTP status OK 
     */
    @RequestMapping(value = "/data/{id}", method = RequestMethod.POST)
	public ResponseEntity<Object> postData(@PathVariable("id") long id, @RequestBody String body) {
		return new ResponseEntity<>("Posted data", HttpStatus.OK);
	}
    
    /**
     * Example PUT API request
     * 
     * @return HTTP status OK 
     */
    @RequestMapping(value = "/data/{id}", method = RequestMethod.PUT)
    public ResponseEntity<Object> putData(@PathVariable("id") long id, @RequestBody String body) {
        return new ResponseEntity<>("Put data", HttpStatus.OK);
    }
    
    /**
     * Demo DELETE API request
     * 
     * @return HTTP status NO CONTENT
     */
    @RequestMapping(value = "/data/", method = RequestMethod.DELETE)
    public ResponseEntity<Object> deleteData() {
        return new ResponseEntity<>("", HttpStatus.NO_CONTENT);
    }
}
