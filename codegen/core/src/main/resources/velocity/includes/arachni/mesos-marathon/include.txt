/*
     This part of the jenkins pipeline is for running Arachni scans. You will have to manually approve to run the scan.

     Only supported in Vulnerabilities detected by Arachni will be identified and printed to the console, but if you want to begin to store your Arachni scan html reports and leverage the remediation steps/information available from those,
     then spin up an Object Storage container provided by Optum Object Storage Service (OOSS) and this can act as persistent storage for your reports.

     Once the scan has finished, it will archive the report to https://jenkins.optum.com/central/job/${paas_project}/job/${originalAppName}/lastSuccessfulBuild/artifact if successful
    */

    stage("Approval for Arachni scans"){
         agent none
         steps{
           timeout(time: 1, unit: 'DAYS') {
             script {
              input message: 'Run Arachni Scans?'
             }
           }
       }
       }
       stage("Setting up Arachni scan"){
         agent { label 'docker-arachni-slave'}
         steps{
           sleep(time: 1, unit: 'MINUTES')
           script{
           def reponse = httpRequest outputFile: 'mesos_response.json', url: env.PAAS_SERVER+'/v2/apps/'+env.PAAS_APP, validResponseCodes: '100:500'
           def jsonResponse = readJSON file:'mesos_response.json'

           if(reponse.status == 200){
             def scanUrl = "http://"+jsonResponse.app.tasks[0].host+":"+jsonResponse.app.tasks[0].ports[0]
                 stage("Scanning..."){
                sh """/attack_scripts/attack_address_input.sh ${scanUrl} || true"""
                   }

                 stage("Archive Arachni reports"){
                      dir('/attack_scripts/reports/arachni_report') {
                        archiveArtifacts '**/*.*'
                      }
                   }
           }
          }
         }

       }
